// this file (Program.cs) was automatically generated by command "dotnet new mvc -n GitBrowser"
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Server.Kestrel.Core; // Added
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using GitBrowser.Services; // Added

namespace YourNamespace
{
    public class Program
    {
        public static void Main(string[] args)
        {
            var builder = WebApplication.CreateBuilder(args);

            // Add services to the container.
            builder.Services.Configure<GitSettings>(builder.Configuration.GetSection("GitSettings")); // Added
            builder.Services.AddScoped<IGitService, GitService>(); // Added
            builder.Services.AddScoped<IFileExplorerService, FileExplorerService>(); // Added
			// this enables the automatic compilation of cshtml-files
			// to see the automatic compilation om the commandline following line was added to appsettings.json
			// "Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation": "Debug"	 
            builder.Services.AddControllersWithViews().AddRazorRuntimeCompilation();

            builder.WebHost.ConfigureKestrel(serverOptions =>
            {
                serverOptions.AddServerHeader = false;
            });

            var app = builder.Build();

            app.Use((context, next) =>
            {
                context.Response.Headers["Content-Security-Policy"] = "default-src 'self'; img-src 'self'; style-src 'self' 'unsafe-inline'; script-src 'self';";
                context.Response.Headers["X-Content-Type-Options"] =  "nosniff";
                context.Response.Headers["X-Frame-Options"] =  "DENY";
                context.Response.Headers["Referrer-Policy"] =  "strict-origin-when-cross-origin";
                context.Response.Headers["Permissions-Policy"] =  "camera=(), microphone=(), geolocation=()";
                context.Response.Headers["X-XSS-Protection"] =  "1; mode=block";
                return next();
            });

            // Configure the HTTP request pipeline.
            if (!app.Environment.IsDevelopment())
            {
                app.UseExceptionHandler("/Home/Error");
                app.UseHsts();
            }

            app.UseHttpsRedirection();
            app.UseStaticFiles();
            app.UseRouting();
            app.UseAuthorization();

            app.MapControllerRoute(
                name: "default",
                pattern: "{controller=Git}/{action=Index}");

            app.Run();
        }
    }
}
